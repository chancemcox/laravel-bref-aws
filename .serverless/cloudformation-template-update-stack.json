{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The AWS CloudFormation template for this Serverless application",
  "Resources": {
    "WebLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/laravel-test-aws-dev-web"
      }
    },
    "ArtisanLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/laravel-test-aws-dev-artisan"
      }
    },
    "WorkerLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/laravel-test-aws-dev-worker"
      }
    },
    "IamRoleLambdaExecution": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": {
              "Fn::Join": [
                "-",
                [
                  "laravel-test-aws",
                  "dev",
                  "lambda"
                ]
              ]
            },
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup",
                    "logs:TagResource"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/laravel-test-aws-dev*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:PutLogEvents"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/laravel-test-aws-dev*:*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "s3:*"
                  ],
                  "Resource": "*"
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "dynamodb:*"
                  ],
                  "Resource": "*"
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "sqs:*"
                  ],
                  "Resource": "*"
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "ses:*"
                  ],
                  "Resource": "*"
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "sqs:ReceiveMessage",
                    "sqs:DeleteMessage",
                    "sqs:GetQueueAttributes"
                  ],
                  "Resource": [
                    {
                      "Fn::GetAtt": [
                        "MyQueue",
                        "Arn"
                      ]
                    }
                  ]
                }
              ]
            }
          }
        ],
        "Path": "/",
        "RoleName": {
          "Fn::Join": [
            "-",
            [
              "laravel-test-aws",
              "dev",
              {
                "Ref": "AWS::Region"
              },
              "lambdaRole"
            ]
          ]
        }
      }
    },
    "WebLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "serverless-framework-deployments-us-east-1-53bf308e-20a5",
          "S3Key": "serverless/laravel-test-aws/dev/1755786390256-2025-08-21T14:26:30.256Z/laravel-test-aws.zip"
        },
        "Handler": "public/index.php",
        "Runtime": "provided.al2",
        "FunctionName": "laravel-test-aws-dev-web",
        "MemorySize": 8100,
        "Timeout": 28,
        "Environment": {
          "Variables": {
            "S3_ASSETS": "laravel-test-aws-dev-assets",
            "SQS_ACTION_QUEUE": {
              "Ref": "MyActionQueue"
            },
            "SQS_QUEUE": {
              "Ref": "MyQueue"
            },
            "QUEUE_CONNECTION": "sqs",
            "BREF_BINARY_RESPONSES": "1",
            "SERVERLESS": "true",
            "DYNAMODB_CONNECTION": "aws_iam_role",
            "APP_STORAGE": "/tmp",
            "LOG_CHANNEL": "stderr"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Layers": [
          "arn:aws:lambda:us-east-1:534081306603:layer:php-80-fpm:113",
          "arn:aws:lambda:us-east-1:403367587399:layer:gmp-php-80:30"
        ]
      },
      "DependsOn": [
        "WebLogGroup"
      ]
    },
    "ArtisanLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "serverless-framework-deployments-us-east-1-53bf308e-20a5",
          "S3Key": "serverless/laravel-test-aws/dev/1755786390256-2025-08-21T14:26:30.256Z/laravel-test-aws.zip"
        },
        "Handler": "artisan",
        "Runtime": "provided.al2",
        "FunctionName": "laravel-test-aws-dev-artisan",
        "MemorySize": 3008,
        "Timeout": 120,
        "Environment": {
          "Variables": {
            "S3_ASSETS": "laravel-test-aws-dev-assets",
            "SQS_ACTION_QUEUE": {
              "Ref": "MyActionQueue"
            },
            "SQS_QUEUE": {
              "Ref": "MyQueue"
            },
            "QUEUE_CONNECTION": "sqs",
            "BREF_BINARY_RESPONSES": "1",
            "SERVERLESS": "true",
            "DYNAMODB_CONNECTION": "aws_iam_role",
            "APP_STORAGE": "/tmp",
            "LOG_CHANNEL": "stderr"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Layers": [
          "arn:aws:lambda:us-east-1:534081306603:layer:php-80:116",
          "arn:aws:lambda:us-east-1:534081306603:layer:console:111"
        ]
      },
      "DependsOn": [
        "ArtisanLogGroup"
      ]
    },
    "WorkerLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "serverless-framework-deployments-us-east-1-53bf308e-20a5",
          "S3Key": "serverless/laravel-test-aws/dev/1755786390256-2025-08-21T14:26:30.256Z/laravel-test-aws.zip"
        },
        "Handler": "worker.php",
        "Runtime": "provided.al2",
        "FunctionName": "laravel-test-aws-dev-worker",
        "MemorySize": 3008,
        "Timeout": 900,
        "Environment": {
          "Variables": {
            "S3_ASSETS": "laravel-test-aws-dev-assets",
            "SQS_ACTION_QUEUE": {
              "Ref": "MyActionQueue"
            },
            "SQS_QUEUE": {
              "Ref": "MyQueue"
            },
            "QUEUE_CONNECTION": "sqs",
            "BREF_BINARY_RESPONSES": "1",
            "SERVERLESS": "true",
            "DYNAMODB_CONNECTION": "aws_iam_role",
            "APP_STORAGE": "/tmp",
            "LOG_CHANNEL": "stderr"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "WorkerLogGroup"
      ]
    },
    "WebLambdaVersion2dSXOXaz7avlG9OdQaUpdmRICqI8nKGTzGtkjASyBvo": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "WebLambdaFunction"
        },
        "CodeSha256": "bic5J4ljAALp4oa6JivWhCmyZT7Sanc3wJ8VVjztZrc="
      }
    },
    "ArtisanLambdaVersionsEpJJFeun8syCwfi7vWe8PBnJSMpx0WYrchgoW11cI": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "ArtisanLambdaFunction"
        },
        "CodeSha256": "bic5J4ljAALp4oa6JivWhCmyZT7Sanc3wJ8VVjztZrc="
      }
    },
    "WorkerLambdaVersionu4OWPSlxmWSVYSsPF1rBO413VhNsfxR3OjrgjNb44": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "WorkerLambdaFunction"
        },
        "CodeSha256": "bic5J4ljAALp4oa6JivWhCmyZT7Sanc3wJ8VVjztZrc="
      }
    },
    "ApiGatewayRestApi": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Name": "laravel-test-aws-dev",
        "BinaryMediaTypes": [
          "*/*"
        ],
        "EndpointConfiguration": {
          "Types": [
            "EDGE"
          ]
        },
        "Policy": ""
      }
    },
    "ApiGatewayResourceProxyVar": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "ApiGatewayRestApi",
            "RootResourceId"
          ]
        },
        "PathPart": "{proxy+}",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayMethodAny": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "ANY",
        "RequestParameters": {},
        "ResourceId": {
          "Fn::GetAtt": [
            "ApiGatewayRestApi",
            "RootResourceId"
          ]
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "WebLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "WebLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayMethodProxyVarAny": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "ANY",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceProxyVar"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "WebLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "WebLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayDeployment1755786380971": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "StageName": "dev"
      },
      "DependsOn": [
        "ApiGatewayMethodAny",
        "ApiGatewayMethodProxyVarAny"
      ]
    },
    "WebLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "WebLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "WorkerEventSourceMappingSQSMyQueue": {
      "Type": "AWS::Lambda::EventSourceMapping",
      "DependsOn": [
        "IamRoleLambdaExecution"
      ],
      "Properties": {
        "BatchSize": 1,
        "EventSourceArn": {
          "Fn::GetAtt": [
            "MyQueue",
            "Arn"
          ]
        },
        "FunctionName": {
          "Fn::GetAtt": [
            "WorkerLambdaFunction",
            "Arn"
          ]
        },
        "Enabled": true
      }
    },
    "MyAssetsBucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": false,
          "BlockPublicPolicy": false,
          "IgnorePublicAcls": false,
          "RestrictPublicBuckets": false
        },
        "BucketName": "laravel-test-aws-dev-assets",
        "OwnershipControls": {
          "Rules": [
            {
              "ObjectOwnership": "ObjectWriter"
            }
          ]
        }
      }
    },
    "MyAssetsBucketPolicy": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "MyAssetsBucket"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": "*",
              "Action": "s3:GetObject",
              "Resource": {
                "Fn::Join": [
                  "/",
                  [
                    {
                      "Fn::GetAtt": [
                        "MyAssetsBucket",
                        "Arn"
                      ]
                    },
                    "*"
                  ]
                ]
              }
            }
          ]
        }
      }
    },
    "MyWebsiteCDN": {
      "Type": "AWS::CloudFront::Distribution",
      "Properties": {
        "DistributionConfig": {
          "Aliases": [
            "laravel.cox-fam.com"
          ],
          "Enabled": true,
          "PriceClass": "PriceClass_100",
          "HttpVersion": "http2",
          "Origins": [
            {
              "Id": "MyWebsite",
              "DomainName": {
                "Fn::Join": [
                  ".",
                  [
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "execute-api",
                    {
                      "Ref": "AWS::Region"
                    },
                    "amazonaws.com"
                  ]
                ]
              },
              "OriginPath": "/dev",
              "CustomOriginConfig": {
                "OriginProtocolPolicy": "https-only"
              }
            },
            {
              "Id": "MyAssets",
              "DomainName": {
                "Fn::GetAtt": [
                  "MyAssetsBucket",
                  "RegionalDomainName"
                ]
              },
              "S3OriginConfig": {}
            }
          ],
          "DefaultCacheBehavior": {
            "AllowedMethods": [
              "GET",
              "HEAD",
              "OPTIONS",
              "PUT",
              "POST",
              "PATCH",
              "DELETE"
            ],
            "TargetOriginId": "MyWebsite",
            "DefaultTTL": 0,
            "MinTTL": 0,
            "MaxTTL": 0,
            "ForwardedValues": {
              "QueryString": true,
              "Cookies": {
                "Forward": "all"
              },
              "Headers": [
                "Accept",
                "Accept-Language",
                "Origin",
                "Referer",
                "Access-Control-Request-Headers",
                "Access-Control-Request-Method",
                "Authorization",
                "authorization"
              ]
            },
            "ViewerProtocolPolicy": "redirect-to-https"
          },
          "CacheBehaviors": [
            {
              "PathPattern": "assets/*",
              "TargetOriginId": "MyAssets",
              "AllowedMethods": [
                "GET",
                "HEAD"
              ],
              "ForwardedValues": {
                "QueryString": "false",
                "Cookies": {
                  "Forward": "none"
                }
              },
              "ViewerProtocolPolicy": "redirect-to-https",
              "Compress": true
            }
          ],
          "CustomErrorResponses": [
            {
              "ErrorCode": 500,
              "ErrorCachingMinTTL": 0
            },
            {
              "ErrorCode": 504,
              "ErrorCachingMinTTL": 0
            }
          ]
        }
      }
    },
    "MyActionQueue": {
      "Type": "AWS::SQS::Queue",
      "Properties": {
        "KmsMasterKeyId": "alias/aws/sqs",
        "VisibilityTimeout": 900,
        "QueueName": "laravel-test-aws-dev-Action",
        "RedrivePolicy": {
          "maxReceiveCount": 3,
          "deadLetterTargetArn": {
            "Fn::GetAtt": [
              "MyDeadLetterQueue",
              "Arn"
            ]
          }
        }
      }
    },
    "MyDeadLetterQueue": {
      "Type": "AWS::SQS::Queue",
      "Properties": {
        "KmsMasterKeyId": "alias/aws/sqs",
        "QueueName": "laravel-test-aws-dev-Action-DLQ",
        "MessageRetentionPeriod": 1209600
      }
    },
    "MyQueue": {
      "Type": "AWS::SQS::Queue",
      "Properties": {
        "VisibilityTimeout": 900,
        "KmsMasterKeyId": "alias/aws/sqs",
        "QueueName": "dev-laravel-test-aws",
        "RedrivePolicy": {
          "maxReceiveCount": 3,
          "deadLetterTargetArn": {
            "Fn::GetAtt": [
              "MyQueueDeadLetterQueue",
              "Arn"
            ]
          }
        }
      }
    },
    "MyQueueDeadLetterQueue": {
      "Type": "AWS::SQS::Queue",
      "Properties": {
        "KmsMasterKeyId": "alias/aws/sqs",
        "QueueName": "dev-laravel-test-aws-DLQ",
        "MessageRetentionPeriod": 1209600
      }
    },
    "MyMetaTable": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "TableName": "dev-laravel-test-meta",
        "BillingMode": "PAY_PER_REQUEST",
        "AttributeDefinitions": [
          {
            "AttributeName": "type",
            "AttributeType": "S"
          },
          {
            "AttributeName": "id",
            "AttributeType": "N"
          }
        ],
        "KeySchema": [
          {
            "AttributeName": "type",
            "KeyType": "HASH"
          },
          {
            "AttributeName": "id",
            "KeyType": "RANGE"
          }
        ],
        "TimeToLiveSpecification": {
          "AttributeName": "ttl",
          "Enabled": true
        },
        "SSESpecification": {
          "SSEEnabled": true
        }
      }
    },
    "MyPermissionsTable": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "TableName": "dev-laravel-test-permissions",
        "BillingMode": "PAY_PER_REQUEST",
        "GlobalSecondaryIndexes": [
          {
            "IndexName": "uuidIndex",
            "KeySchema": [
              {
                "AttributeName": "room",
                "KeyType": "HASH"
              },
              {
                "AttributeName": "uuid",
                "KeyType": "RANGE"
              }
            ],
            "Projection": {
              "ProjectionType": "ALL"
            }
          }
        ],
        "AttributeDefinitions": [
          {
            "AttributeName": "room",
            "AttributeType": "S"
          },
          {
            "AttributeName": "id",
            "AttributeType": "N"
          },
          {
            "AttributeName": "uuid",
            "AttributeType": "N"
          }
        ],
        "KeySchema": [
          {
            "AttributeName": "room",
            "KeyType": "HASH"
          },
          {
            "AttributeName": "id",
            "KeyType": "RANGE"
          }
        ],
        "TimeToLiveSpecification": {
          "AttributeName": "ttl",
          "Enabled": true
        },
        "SSESpecification": {
          "SSEEnabled": true
        }
      }
    }
  },
  "Outputs": {
    "ServerlessDeploymentBucketName": {
      "Value": "serverless-framework-deployments-us-east-1-53bf308e-20a5",
      "Export": {
        "Name": "sls-laravel-test-aws-dev-ServerlessDeploymentBucketName"
      }
    },
    "WebLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "WebLambdaVersion2dSXOXaz7avlG9OdQaUpdmRICqI8nKGTzGtkjASyBvo"
      },
      "Export": {
        "Name": "sls-laravel-test-aws-dev-WebLambdaFunctionQualifiedArn"
      }
    },
    "ArtisanLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "ArtisanLambdaVersionsEpJJFeun8syCwfi7vWe8PBnJSMpx0WYrchgoW11cI"
      },
      "Export": {
        "Name": "sls-laravel-test-aws-dev-ArtisanLambdaFunctionQualifiedArn"
      }
    },
    "WorkerLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "WorkerLambdaVersionu4OWPSlxmWSVYSsPF1rBO413VhNsfxR3OjrgjNb44"
      },
      "Export": {
        "Name": "sls-laravel-test-aws-dev-WorkerLambdaFunctionQualifiedArn"
      }
    },
    "ServiceEndpoint": {
      "Description": "URL of the service endpoint",
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "ApiGatewayRestApi"
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region"
            },
            ".",
            {
              "Ref": "AWS::URLSuffix"
            },
            "/dev"
          ]
        ]
      },
      "Export": {
        "Name": "sls-laravel-test-aws-dev-ServiceEndpoint"
      }
    },
    "MyWebsiteCDNId": {
      "Description": "CDN distribution id.",
      "Value": {
        "Ref": "MyWebsiteCDN"
      }
    }
  }
}